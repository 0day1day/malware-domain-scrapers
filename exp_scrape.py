'''exp_scrape.py

mhg637

Example of how to scrape exposure.iseclab.org's malware domain list.

I tried to comment everything thoroughly.

Don't be afraid the docs!

Python 2.7 docs can be found here: http://docs.python.org/2.7/
urllib2 docs can be found here: http://docs.python.org/2.7/library/urllib2.html

'''

# Import the urllib2 module.
import urllib2, argparse, sys

# Set up the script's argument parser
parser = argparse.ArgumentParser(description='Scrapes exposure.iseclab.org\'s malicious domain list.', usage='exp_scraper.py [-h] [-o <file>]')
parser.add_argument('-o', '--output', help='specify a file to write to')

# Parse through the arguments given by the user (if any)
args = parser.parse_args()

# If the user specifies an output file redirect the stdout to a file.
if args.output:
  sys.stdout = open(args.output, 'w')

# Create a request object.
# http://docs.python.org/2.7/library/urllib2.html#urllib2.Request
request = urllib2.Request('http://exposure.iseclab.org/malware_domains.txt')

# Add some headers to our request.
# http://docs.python.org/2.7/library/urllib2.html#urllib2.Request.add_header
# List of HTTP header fields http://en.wikipedia.org/wiki/List_of_HTTP_header_fields
# Whats your user agent string? http://www.useragentstring.com/
request.add_header('User-Agent', 'Soc-zilla/1.0')
request.add_header('Referer', 'http://awesomereferer.com')

# Create a variable to store the raw HTML from the page and open the request.
# http://docs.python.org/2.7/library/urllib2.html#urllib2.urlopen
html = urllib2.urlopen(request).read()
html = unicode(html)

print(html)
